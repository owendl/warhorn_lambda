{
"event_query":"query ($slug: String!) {event(slug: $slug){id}}"
,"event_roles":"query($slug: String!) {event(slug: $slug){id,roles{id,name}}}"
,"gamesystems_query": "query($system: String) {gameSystems(query: $system){nodes{abbreviation,name,id}}}"
,"gamesystems_mutation" : "mutation($system: String!) { createGameSystem(input: {name: $system}){gameSystem{id}}}"
,"get_current_slots" : "query ($slug: String!) {event(slug: $slug){slots{nodes{id,startsAt,endsAt}}}}"
,"create_slot" : "mutation ($startsAt :  ISO8601DateTime!, $endsAt :  ISO8601DateTime!, $eventId : ID!, $timezone : String!) {createSlot(input: {eventId: $eventId, endsAt: $endsAt, startsAt: $startsAt, timezone : $timezone}){slot{id}}}"
,"event_scenarios" : "query($slug: String!){eventScenarioOfferings(slug: $slug){nodes{scenario{name,id,blurb}}}}"
,"create_scenario" : "mutation ($eventId : ID!,$gameSystemId : ID!,$name : String!,$blurb : String,$art : String){createEventScenario(input: {eventId: $eventId,gameSystemId: $gameSystemId,name : $name,blurb : $blurb,coverArtUrl : $art}){scenario{id}}}"
,"query_sessions" : "query ($slug: [String!]!) {eventSessions(events: $slug){nodes{id,name,notes, slot{id},scenario{name, id, blurb}}}}"
,"create_session" : "mutation ($slotId: ID!,$scenarioId: ID!,$tableCount: Int!,$tableSize: Int!,$notes: String) {createEventSession(input: {slotId: $slotId,scenarioId: $scenarioId,tableCount: $tableCount,tableSize: $tableSize,notes: $notes}){session{id}}}"
,"get_registration_query": "query($slug: String!, $email: String!){eventRegistration(slug: $slug, email: $email){id,roles{id,name},registrant{id}}}"
,"check_session_gm" : "query ($slug: [String!]!) {eventSessions(events: $slug){nodes{id,availableGmSeats}}}"
,"claim_gm_slot": "mutation ($sessionId: ID!, $userId: ID!){claimGmSignup(input:{sessionId: $sessionId, userId: $userId}){signup{role{id}}}}"
,"assign_role_mutation": "mutation ($registrationId: ID!, $roleId: ID!){assignRegistrationRole(input:{registrationId: $registrationId, roleId: $roleId}){registration{registrant{id},roles{name}}}}"
,"check_session_status" : "query ($slug: [String!]!) {eventSessions(events: $slug){nodes{id,status}}}"
,"publish_game": "mutation ($sessionId: ID!) {publishEventSession(input: {sessionId: $sessionId}){session{id}}}"
}